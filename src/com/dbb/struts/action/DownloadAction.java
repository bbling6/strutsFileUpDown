/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dbb.struts.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.bsf.util.event.adapters.java_awt_event_ActionAdapter;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.dbb.domain.Users;
import com.dbb.service.UserService;

/** 
 * MyEclipse Struts
 * Creation date: 05-27-2017
 * 
 * XDoclet definition:
 * @struts.action
 */
public class DownloadAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		//接受传过来的要下载的用户名
		String name=request.getParameter("user");
		
		//创建userservice对象,调用方法得到用户
		UserService userService=new UserService();
		Users user=userService.getUser(name);
		
		//下载文件
		//设置一个头，告诉浏览器有文件要下载
		response.setContentType("text/html;charset=utf-8");
		//如果下载的文件名有中文，需要对其进行URL编码
		try {
			response.setHeader("Content-Disposition", "attachment;filename="
					+java.net.URLEncoder.encode(user.getFileName(),"utf-8"));
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		//先得到files文件夹的绝对路路劲,再加上文件名
		String path=this.getServlet().getServletContext().getRealPath("/files");
		String fullpath=path+"\\"+user.getFileNewName();
		
		FileInputStream fis=null;
		OutputStream os=null;
		byte []byts=new byte[1024];
		int len=0;
		
		try {
			
			fis=new FileInputStream(new File(fullpath));
			os=response.getOutputStream();
		    
			while((len=fis.read(byts))>0){
				os.write(byts, 0, len);
			}
			
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}finally{
		
			try {
				os.close();
				fis.close();
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		mapping.findForward("goback");
		return null;
	}
}